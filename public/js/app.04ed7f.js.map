{"version":3,"file":"js/app.04ed7f.js","mappings":"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","sources":["webpack://@roots/bud/sage/bud/./scripts/classes/Matcher.ts","webpack://@roots/bud/sage/bud/./scripts/classes/Medium.ts","webpack://@roots/bud/sage/bud/./scripts/classes/Mediumator.ts","webpack://@roots/bud/sage/bud/./scripts/app.ts"],"sourcesContent":["class Test {\n    regexp: RegExp;\n\n    constructor(regexp: RegExp)\n    {\n        this.regexp = regexp;\n    }\n\n    test(str: URL | string): 'pass' | 'fail' {\n        //= cast as string\n        if (str instanceof URL)\n        {\n            str = str.toString();\n        }\n\n        //= pass or fail\n        return str.match( this.regexp ) ? 'pass' : 'fail';\n    }\n}\n\nclass Match {\n    static all( str: string, ...tests: Test[]): boolean {\n        //= bail\n        if (tests.length <= 0) return false;\n\n        //= execute tests and filter by \"pass\"\n        return tests\n            .map((t: Test) => t.test(str))\n            .filter(r => r == 'pass').length == tests.length;\n    }\n\n    static one(str: string, ...tests: Test[]): boolean {\n        //= bail\n        if (tests.length <= 0) return false;\n\n        //= execute tests and filter by \"pass\"\n        return tests\n            .map((t: Test) => t.test(str))\n            .filter(r => r == 'pass').length >= 1;\n    }\n}\n\nconst Tests = {\n    //= organic\n    google: new Test(/\\.google(?:\\.com?|\\.\\w{2})(?:\\.\\w{2})?/),\n    bing: new Test(/((?:bing|bing\\.office|microsoftapp)\\.net)|((?:bing(?:apis)?|windowssearch|bingforbusiness)\\.com)|((?:cortana)\\.ai)/),\n    yahoo: new Test(/yahoo(?:\\.com?(?:\\.\\w{2})?|\\.\\w{2})/),\n    ecosia: new Test(/ecosia\\.\\w{2,3}/),\n    duckduckgo: new Test(/duckduckgo\\.\\w{2,3}/),\n    qwant: new Test(/qwant\\.com/),\n    \n    //= social\n    twitter: new Test(/(?:tw(?:ttr|img|itter))(?:\\.com|\\.net)|x\\.com/),\n    facebook: new Test(/(?:the)?face(?:b|c)oo?o?k?\\.(?:com?|\\w{2})(?:\\.\\w{2})?|(?:fb(?:cdn)?\\.(?:com|me|net))|(?:ins?tr?a?gram\\.com?)|^m\\.me|messenger\\.com|akamaihd\\.net/),\n    tiktok: new Test(/tiktok(?:v|cdn)?\\.com/),\n    instagram: new Test(/instagram(?:m|n)?\\.com/),\n    linkedin: new Test(/linkedin\\.com/),\n    pinterest: new Test(/pinterest\\.com/),\n    youtube: new Test(/youtube\\.\\w{2}|youtube(?:go|gaming|kids)\\.(?:com|\\w{2})?(?:\\.\\w{2})?|(?:yt|youtu)\\.be/),\n}\n\nexport { Match, Test, Tests };","import { TMedium, TMediumName, TMediumType } from \"../types/Medium\";\n\nclass Medium implements TMedium {\n\ttype: TMediumType;\n\tmedium: TMediumName;\n\trequest: URL | null;\n\treferer: URL | null;\n\n\tconstructor(\n\t\ttype: TMediumType = \"utm\",\n\t\tmedium: TMediumName,\n\t\trequest: URL | null = null,\n\t\treferer: URL | null = null,\n\t)\n\t{\n\t\tthis.type = type;\n\t\tthis.medium = medium;\n\t\tthis.request = request;\n\t\tthis.referer = referer;\n\t}\n}\n\nclass UtmMedium extends Medium {\n\tconstructor(\n\t\tmedium: TMediumName,\n\t\trequest: URL | null = null,\n\t\treferer: URL | null = null\n\t)\n\t{\n\t\tsuper( \"utm\", medium, request, referer );\n\t}\n}\n\nclass RefererMedium extends Medium {\n\tconstructor(\n\t\tmedium: TMediumName,\n\t\trequest: URL | null = null,\n\t\treferer: URL | null = null\n\t)\n\t{\n\t\tsuper( \"referer\", medium, request, referer );\n\t}\n}\n\nexport { UtmMedium, RefererMedium };","import { TMedium, TMediumName } from \"../types/Medium\";\nimport { TUrchinTrackingModule } from \"../types/UrchinTrackingModule\";\nimport { Match, Tests } from \"./Matcher\";\nimport { RefererMedium, UtmMedium } from \"./Medium\";\n\n\nclass Mediumator {\n\t/**\n\t * Returns a Medium object\n\t * \n\t * @param {URL | String } request \tThe requested url; e.g. https://mysite.com/nl/contact/\n\t * @param {URL | string} referer\t(optional) The source url from which the page has been requested\n\t * \n\t * @returns {TMedium} An object with 4 properties type, medium, request and referer\n\t */\n\tstatic test(request: URL | string, referer: URL | string | null = null): TMedium {\n\t\t//= check if URL has UTM\n\t\tconst utm = this.getUrchinTrackingModule(request);\n\n\t\tif (utm.medium)\n\t\t{\n\t\t\treturn this.parseUtm( utm );\n\t\t}\n\n        return this.parseReferer( request, referer );\n\t}\n\n\t/**\n\t * Handle URL with UTM\n\t */\n\tprivate static parseUtm( utm: TUrchinTrackingModule ): TMedium\n\t{\n\t\tlet medium: TMediumName = \"referral\";\n\n\t\tswitch ( utm.medium?.toLowerCase() )\n\t\t{\n\t\t\tcase \"cpc\":\n\t\t\tcase \"display\":\n\t\t\tcase \"email\":\n\t\t\t\tmedium = \"cpc\";\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"pmax\":\n\t\t\tcase \"leadgen\":\n\t\t\tcase \"search\":\n\t\t\t\tmedium = \"cpc\";\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"google\":\n\t\t\tcase \"bing\":\n\t\t\tcase \"yahoo\":\n\t\t\tcase \"ecosia\":\n\t\t\tcase \"duckduckgo\":\n\t\t\tcase \"qwant\":\n\t\t\t\tmedium = \"organic\";\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"twitter\":\n\t\t\tcase \"x\":\n\t\t\tcase \"facebook\":\n\t\t\tcase \"fb\":\n\t\t\tcase \"tiktok\":\n\t\t\tcase \"instagram\":\n\t\t\tcase \"ig\":\n\t\t\tcase \"linkedin\":\n\t\t\tcase \"pinterest\":\n\t\t\tcase \"youtube\":\n\t\t\t\tmedium = \"social\";\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"newsletter\":\n\t\t\t\tmedium = \"email\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn new UtmMedium( medium, utm.url );\n\t}\n\n\t/**\n\t * Handle URL without UTM\n\t */\n\tprivate static parseReferer(request : URL | string, referer: URL | string | null = null): TMedium\n\t{\n\t\t//= cast anyway\n\t\trequest = new URL(request);\n\t\treferer = referer ? new URL(referer) : null;\n\n\t\t//= parse referer exceptions\n\t\tif (referer?.pathname.match(/^(?:\\/wp)?\\/wp-(?:admin|login)/))\n\t\t{\n\t\t\treferer = null;\n\t\t}\n\n\t\t//= NO referer\n\t\tif (referer == null )\n\t\t{\n\t\t\treturn new RefererMedium(\"direct\", request);\n\t\t}\n\n\t\t//= YES referer\n\t\tif (Match.one(\n\t\t\treferer.toString(),\n\t\t\tTests.google,\n\t\t\tTests.bing,\n\t\t\tTests.yahoo,\n\t\t\tTests.ecosia,\n\t\t\tTests.duckduckgo,\n\t\t\tTests.qwant\n\t\t))\n\t\t{\n\t\t\treturn new RefererMedium(\"organic\", request, referer);\n\t\t}\n\n\t\tif (Match.one(\n\t\t\treferer.toString(),\n\t\t\tTests.twitter,\n\t\t\tTests.facebook,\n\t\t\tTests.tiktok,\n\t\t\tTests.instagram,\n\t\t\tTests.linkedin,\n\t\t\tTests.pinterest,\n\t\t\tTests.youtube\n\t\t))\n\t\t{\n\t\t\treturn new RefererMedium(\"social\", request, referer);\n\t\t}\n\n\t\treturn new RefererMedium(\"referral\", request, referer);\n\t}\n\n\tprivate static getUrchinTrackingModule(url: URL | string): TUrchinTrackingModule {\n\t\t//= cast anyway\n\t\turl = new URL(url);\n\n\t\t//= bail early\n\t\tif (!(url instanceof URL))\n\t\t{\n\t\t\tthrow new Error(\"Refer not an URL!\");\n\t\t}\n\t\t\n\t\t//= return\n\t\treturn {\n\t\t\turl: url,\n\t\t\tid: url.searchParams.get( \"utm_id\" ),\n\t\t\tsource: url.searchParams.get(\"utm_source\"),\n\t\t\tmedium: url.searchParams.get(\"utm_medium\"),\n\t\t\tname: url.searchParams.get(\"utm_campaign\"),\n\t\t\tterm: url.searchParams.get(\"utm_term\"),\n\t\t\tcontent: url.searchParams.get(\"utm_content\"),\n\t\t};\n\t}\n}\n\nexport { Mediumator };","import { Mediumator  } from \"./classes/Mediumator\";\nimport { TAttributorStore } from \"./types/AttributorStore\";\nimport { TMedium } from \"./types/Medium\";\n\n// const mTest = \n\nclass Attributor\n{\n\tattrElems: NodeListOf<HTMLElement>;\n\tdata: TMedium;\n\n\tconstructor()\n\t{\n\t\tthis.attrElems = document.querySelectorAll('[class*=oto-attr]');\n\n\t\t//= bail early\n\t\tif (this.attrElems.length <= 0)\n\t\t{\n\t\t\tconsole.warn('No Attributor fields found!');\n\t\t\treturn;\n\t\t}\n\n\t\t//= fetch from storage\n\t\tif (!(\"localStorage\" in window))\n\t\t{\n\t\t\tconsole.warn('Local storage not accessible!');\n\t\t\treturn;\n\t\t}\n\n\t\t//= boot\n\t\tthis.readFromStorage();\n\t\tthis.populateAttrs();\n\t}\n\n\treadFromStorage()\n\t{\n\t\tconsole.log('readFromStorage');\n\n\t\t//= undefined > set store\n\t\tlet json: string | null = localStorage.getItem('oto/attributor');\n\t\tif (json == null)\n\t\t{\n\t\t\tconsole.log('undefined, set store');\n\n\t\t\tjson = this.#createAttributorStoreJSON();\n\t\t\tlocalStorage.setItem('oto/attributor', json);\n\t\t}\n\n\t\t//= invalid > set store\n\t\tconst parsed: TAttributorStore = JSON.parse(json);\n\t\tif (false == this.#validateStorage( parsed ) )\n\t\t{\n\t\t\tconsole.log('expired, set store');\n\n\t\t\tjson = this.#createAttributorStoreJSON();\n\t\t\tlocalStorage.setItem('oto/attributor', json);\n\t\t}\n\n\t\t//= next\n\t\tthis.data = parsed.payload;\n\t}\n\n\t#validateStorage( data: TAttributorStore )\n\t{\n\t\t//= bail early\n\t\tif (!(\"expires\" in data) || !(\"payload\" in data))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t//= validate timestamp\n\t\tconst now = new Date();\n\t\tconst expires = new Date(data.expires);\n\n\t\tif (now >= expires)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#createAttributorStoreJSON(): string\n\t{\n\t\tconsole.log('createAttributorStoreJSON');\n\n\t\tconst response = Mediumator.test(\n\t\t\twindow.location.href,\n\t\t\tdocument.referrer\n\t\t);\n\n\t\tconst expires = new Date();\n\t\texpires.setTime(expires.getTime() + 4 * 60 * 60 * 1000 ); //= add 4 hours\n\n\t\tconst data = JSON.stringify({\n\t\t\tpayload: response,\n\t\t\texpires: expires,\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tpopulateAttrs()\n\t{\n\t\tconsole.log('populateAttrs');\n\n\t\tthis.attrElems.forEach((gfieldEl: HTMLElement) => {\n\t\t\tconst inputEl: HTMLInputElement|null = gfieldEl.querySelector('input');\n\t\t\tconst matches: RegExpMatchArray|null = gfieldEl.classList.toString().match(/(?<className>oto-attr__(?<prop>[^\\s]+))/);\n\n\t\t\t//= bail\n\t\t\tif (matches == null || inputEl == null)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//const className = matches?.groups.className;\n\t\t\tconst prop = matches?.groups.prop;\n\n\t\t\t//= dynamically set field oto-attr__{{propName}} e.g. medium is also data<TMedium>.medium\n\t\t\tif (prop in this.data)\n\t\t\t{\n\t\t\t\tinputEl.value = this.data[prop];\n\t\t\t}\n\t\t});\n\t}\n}\n\nnew Attributor();"],"names":["Test","regexp","constructor","this","test","str","URL","toString","match","Match","all","tests","length","map","t","filter","r","one","Tests","google","bing","yahoo","ecosia","duckduckgo","qwant","twitter","facebook","tiktok","instagram","linkedin","pinterest","youtube","Medium","type","medium","request","referer","UtmMedium","super","RefererMedium","Mediumator","utm","getUrchinTrackingModule","parseUtm","parseReferer","toLowerCase","url","pathname","Error","id","searchParams","get","source","name","term","content","attrElems","data","document","querySelectorAll","console","warn","window","readFromStorage","populateAttrs","log","json","localStorage","getItem","setItem","parsed","JSON","parse","payload","Date","expires","response","location","href","referrer","setTime","getTime","stringify","forEach","gfieldEl","inputEl","querySelector","matches","classList","prop","groups","value"],"sourceRoot":""}